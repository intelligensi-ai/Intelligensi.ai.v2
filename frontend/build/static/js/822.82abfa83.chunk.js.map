{"version":3,"file":"static/js/822.82abfa83.chunk.js","mappings":"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","sources":["components/Lib/fetchDrupalContent.ts","components/Content/contentPreview.tsx"],"sourcesContent":["// lib/fetchDrupalContent.ts\nimport { ISite } from '../../types/sites';\n\nexport interface ContentNode {\n  nid: string;\n  title: string;\n  created: string;\n  status: string;\n  type: string;\n  body: string;\n}\n\nexport const constructEndpointUrl = (baseUrl: string): string | null => {\n  try {\n    let url = baseUrl;\n    if (!url.startsWith('http://') && !url.startsWith('https://')) {\n      url = `https://${url}`;\n    }\n    url = url.replace(/\\/$/, '');\n    return `${url}/api/bulk-export`;\n  } catch (error) {\n    console.error('Error constructing endpoint URL:', error);\n    return null;\n  }\n};\n\nexport const fetchDrupalContent = async (site: ISite): Promise<ContentNode[]> => {\n  if (!site?.site_url) throw new Error('No site URL provided');\n\n  const endpointUrl = constructEndpointUrl(site.site_url);\n  if (!endpointUrl) throw new Error('Invalid site URL');\n\n  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n  if (!apiBaseUrl) {\n    console.error(\"CRITICAL: REACT_APP_API_BASE_URL is not defined.\");\n    throw new Error(\"Application configuration error: API endpoint is missing.\");\n  }\n\n  const firebaseFunctionUrl = `${apiBaseUrl}/drupal7/structure?endpoint=${encodeURIComponent(endpointUrl)}`;\n  const response = await fetch(firebaseFunctionUrl);\n\n  if (!response.ok) {\n    throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n  }\n\n  const result = await response.json();\n  return result.structure || [];\n};\n","import React, { useState, useEffect } from 'react';\nimport { ISite } from '../../types/sites';\nimport { fetchDrupalContent, ContentNode } from '../Lib/fetchDrupalContent';\ninterface ContentPreviewProps {\n  site: ISite;\n  onClose: () => void;\n}\n\nconst ContentPreview: React.FC<ContentPreviewProps> = ({ site, onClose }) => {\n  const [content, setContent] = useState<ContentNode[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set());\n\n  const constructEndpointUrl = (baseUrl: string) => {\n    try {\n      // Ensure the URL has a protocol\n      let url = baseUrl;\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        url = `https://${url}`;\n      }\n\n      // Remove trailing slash if present\n      url = url.replace(/\\/$/, '');\n\n      // Append the API endpoint\n      return `${url}/api/bulk-export`;\n    } catch (error) {\n      console.error('Error constructing endpoint URL:', error);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n  const fetchContent = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchDrupalContent(site);\n      setContent(data);\n    } catch (err) {\n      console.error('Content fetch error:', err);\n      setError(\n        err instanceof Error\n          ? err.message\n          : 'An unexpected error occurred while fetching content'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  fetchContent();\n}, [site.site_url]);\n\n\n  // ... rest of the component remains the same ...\n  const toggleExpand = (nid: string) => {\n    setExpandedNodes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(nid)) {\n        newSet.delete(nid);\n      } else {\n        newSet.add(nid);\n      }\n      return newSet;\n    });\n  };\n\n  const cleanBodyText = (text: string) => {\n    if (!text) return '';\n    \n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = text;\n    let cleaned = textArea.value;\n\n    cleaned = cleaned\n      .replace(/<[^>]*>?/gm, '')\n      .replace(/\\\\(r|n|\"|')/g, '')\n      .replace(/\\s+/g, ' ')\n      .trim();\n\n    return cleaned;\n  };\n\n  const getPreviewText = (text: string, nid: string) => {\n    const cleaned = cleanBodyText(text);\n    const lines = cleaned.split('\\n');\n    return expandedNodes.has(nid) ? lines.join('\\n') : lines.slice(0, 3).join('\\n');\n  };\n\n  const formatDate = (timestamp: string) => {\n    try {\n      return new Date(parseInt(timestamp) * 1000).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return 'Unknown date';\n    }\n  };\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div className=\"bg-[#2D3748] rounded-lg p-6 w-full max-w-4xl max-h-[90vh] flex flex-col\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-bold text-white\">\n            Content Preview: {site.site_name}\n          </h2>\n          <button \n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n            aria-label=\"Close preview\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"overflow-y-auto flex-1\">\n          {loading ? (\n            <div className=\"flex flex-col items-center justify-center h-32 space-y-2\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-teal-500\"></div>\n              <p className=\"text-gray-400\">Loading content...</p>\n            </div>\n          ) : error ? (\n            <div className=\"text-red-400 p-4 bg-[#344054] rounded flex flex-col space-y-2\">\n              <p className=\"font-medium\">Could not load content</p>\n              <p className=\"text-sm\">{error}</p>\n              <button\n                onClick={() => window.location.reload()}\n                className=\"mt-2 text-sm text-blue-400 hover:text-blue-300 self-start\"\n              >\n                Try again\n              </button>\n            </div>\n          ) : content.length === 0 ? (\n            <div className=\"text-gray-400 italic p-4 bg-[#344054] rounded\">\n              No content found for this site.\n            </div>\n          ) : (\n            <div className=\"space-y-4 pr-2\">\n              {content.map((node) => (\n                <div \n                  key={node.nid} \n                  className=\"bg-[#344054] p-4 rounded-lg border border-gray-600 transition-colors hover:border-gray-500\"\n                >\n                  <h3 className=\"font-bold text-lg text-teal-400 mb-1\">{node.title}</h3>\n                  <div className=\"text-xs text-gray-400 mb-2\">\n                    {formatDate(node.created)} | {node.type} | {node.status === \"1\" ? \"Published\" : \"Unpublished\"}\n                  </div>\n                  <div className=\"text-gray-300 whitespace-pre-line\">\n                    {getPreviewText(node.body, node.nid)}\n                  </div>\n                  {cleanBodyText(node.body).split('\\n').length > 3 && (\n                    <button\n                      onClick={() => toggleExpand(node.nid)}\n                      className=\"mt-2 text-sm text-blue-400 hover:text-blue-300 transition-colors\"\n                    >\n                      {expandedNodes.has(node.nid) ? 'Show less' : 'Read more...'}\n                    </button>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"mt-4 flex justify-end border-t border-gray-700 pt-4\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded text-white transition-colors\"\n          >\n            Close Preview\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentPreview;"],"names":["fetchDrupalContent","async","site","site_url","Error","endpointUrl","baseUrl","url","startsWith","replace","error","console","constructEndpointUrl","apiBaseUrl","process","firebaseFunctionUrl","encodeURIComponent","response","fetch","ok","status","statusText","json","structure","_ref","onClose","content","setContent","useState","loading","setLoading","setError","expandedNodes","setExpandedNodes","Set","useEffect","data","err","message","fetchContent","cleanBodyText","text","textArea","document","createElement","innerHTML","cleaned","value","trim","getPreviewText","nid","lines","split","has","join","slice","formatDate","timestamp","Date","parseInt","toLocaleDateString","year","month","day","hour","minute","_jsx","className","onClick","e","target","currentTarget","children","_jsxs","site_name","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","window","location","reload","length","map","node","title","created","type","body","toggleExpand","prev","newSet","delete","add"],"sourceRoot":""}