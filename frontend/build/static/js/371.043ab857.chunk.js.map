{"version":3,"file":"static/js/371.043ab857.chunk.js","mappings":"mHAYO,MAcMA,EAAqBC,UAChC,GAAS,OAAJC,QAAI,IAAJA,IAAAA,EAAMC,SAAU,MAAM,IAAIC,MAAM,wBAErC,MAAMC,EAjB6BC,KACnC,IACE,IAAIC,EAAMD,EAKV,OAJKC,EAAIC,WAAW,YAAeD,EAAIC,WAAW,cAChDD,EAAM,WAAWA,KAEnBA,EAAMA,EAAIE,QAAQ,MAAO,IAClB,GAAGF,mBACZ,CAAE,MAAOG,GAEP,OADAC,QAAQD,MAAM,mCAAoCA,GAC3C,IACT,GAMoBE,CAAqBV,EAAKC,UAC9C,IAAKE,EAAa,MAAM,IAAID,MAAM,oBAElC,MAAMS,EAAaC,uDAMnB,MAAMC,EAAsB,GAAGF,gCAAyCG,mBAAmBX,KACrFY,QAAiBC,MAAMH,GAE7B,IAAKE,EAASE,GACZ,MAAM,IAAIf,MAAM,mBAAmBa,EAASG,WAAWH,EAASI,cAIlE,aADqBJ,EAASK,QAChBC,WAAa,EAAE,C,sFClC/B,MA6PA,EA7P4CC,IAA6C,IAA5C,KAAEtB,EAAI,WAAEuB,EAAU,QAAEC,EAAO,QAAEC,GAASH,EACjF,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,UAAwB,KAC/CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,WAAS,IAChDO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,IAC1CpB,EAAO6B,IAAYT,EAAAA,EAAAA,UAAwB,OAGlDU,EAAAA,EAAAA,YAAU,KACYvC,WAClB,IACEmC,GAAmB,GACnBG,EAAS,MACT,MAAME,QAAczC,EAAAA,EAAAA,GAAmBE,GACvC,GAAqB,IAAjBuC,EAAMC,OAER,YADAH,EAAS,qDAGXV,EAAWY,GACXH,EAAgBG,EAAMC,OACxB,CAAE,MAAOC,GACPhC,QAAQD,MAAM,kCAAmCiC,GACjDJ,EAAS,8EACTb,EAAQ,iCACV,CAAC,QACCU,GAAmB,EACrB,GAGFQ,EAAa,GACZ,CAAC1C,IAEJ,MAAM2C,EAAiBC,IACrB,IAAKA,EAAM,MAAO,GAElB,MAAMC,EAAWC,SAASC,cAAc,YACxCF,EAASG,UAAYJ,EACrB,IAAIK,EAAUJ,EAASK,MAQvB,OANAD,EAAUA,EACP1C,QAAQ,aAAc,IACtBA,QAAQ,eAAgB,IACxBA,QAAQ,OAAQ,KAChB4C,OAEIF,CAAO,EAuFhB,OAAIzC,GAEA4C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAAC,WAC7CC,EAAAA,EAAAA,KAAA,UACEC,QAAS/B,EACT4B,UAAU,mDAAkDC,UAE5DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWL,UAC5EC,EAAAA,EAAAA,KAAA,QAAMK,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iCAI3ER,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,UACxEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iDAAiDI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWL,UACnHC,EAAAA,EAAAA,KAAA,QAAMK,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yDAEvER,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAE9C,UAG/B+C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAAA,UACEC,QAAS/B,EACT4B,UAAU,mGAAkGC,SAC7G,gBASPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,+BAA8BC,SAAA,CAAC,0BACnBtD,EAAKgE,cAE/BT,EAAAA,EAAAA,KAAA,UACEC,QAAS/B,EACT4B,UAAU,iCAAgCC,UAE1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUI,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWL,UAC5EC,EAAAA,EAAAA,KAAA,QAAMK,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iCAK3EX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAC,cACpDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBC,SAAA,CAAEvB,EAAS,WAEpDwB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,KAAA,OACEF,UAAU,6DACVY,MAAO,CAAEC,MAAO,GAAGnC,cAKzBqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sEAAqEC,SAAA,CACjF5B,EAAQyC,MAAM,EAAG,GAAGC,KAAKC,IACxBjB,EAAAA,EAAAA,MAAA,OAAoBC,UAAU,kDAAiDC,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAEe,EAAKC,SACvDf,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAAoCC,SAC9CX,EAAc0B,EAAKE,SAEtBnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,CACxCe,EAAKG,KAAK,MAAIH,EAAKI,SANdJ,EAAKI,OAUhB/C,EAAQc,OAAS,IAChBe,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mFAAkFC,UAC/FF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,CAAC,IAC5B5B,EAAQc,OAAS,EAAE,uBAM7BY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,UACEC,QAAS/B,EACTiD,SAAU7C,EACVwB,UAAU,+EAA8EC,SACzF,YAGDC,EAAAA,EAAAA,KAAA,UACEC,QAnKgBzD,UACtB,IACE,IAAK2B,EAAQc,OAEX,YADAH,EAAS,qCAIXP,GAAW,GACXE,EAAY,GACZK,EAAS,MAGT,MAAMsC,EAAY,EAClB,IAAIC,EAAkB,EAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAInD,EAAQc,OAAQqC,GAAKF,EAAW,CAClD,MAAMG,EAAQpD,EAAQyC,MAAMU,EAAGA,EAAIF,GAEnC,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAMtC,OAAQuC,IAAK,CACrC,MAAMV,EAAOS,EAAMC,GACnB,IACE,MAAMC,EAnC4B,CAC1CC,QAkCuC,CAACZ,GAlCzBD,KAAKC,IAAI,CACtBa,MAAO,iBACPC,WAAY,CACVV,IAAKJ,EAAKI,IACVH,MAAOD,EAAKC,MACZC,KAAM5B,EAAc0B,EAAKE,MACzBa,QAASf,EAAKe,QACdlE,OAAwB,MAAhBmD,EAAKnD,OAAiB,YAAc,cAC5CsD,KAAMH,EAAKG,WA4BD7D,EAAaC,uDACnB,IAAKD,EAKH,OAJAF,QAAQD,MAAM,yGACd6B,EAAS,kEACTP,GAAW,SAKPuD,EAAAA,EAAMC,KACV,GAAG3E,kBACHqE,EACA,CACEO,QAAS,CACP,eAAgB,sBAKtBX,GACF,CAAE,MAAOpE,GACPC,QAAQD,MAAM,4BAA4B6D,EAAKI,OAAQjE,EACzD,CAAC,QACC,MAAMgF,EAAiBX,EAAIE,EAAI,EACzBU,EAAcC,KAAKC,MAAOH,EAAiB9D,EAAQc,OAAU,KACnER,EAAYyD,EACd,CACF,CACF,CAEAlE,EAAW,CACTqE,eAAgBhB,EAChBiB,SAAU7F,EAAKgE,WAEnB,CAAE,MAAOxD,GAAQ,IAADsF,EAAAC,EACdtF,QAAQD,MAAM,uBAAwBA,GACtC,MAAMwF,GAA6B,QAAdF,EAAAtF,EAAMO,gBAAQ,IAAA+E,GAAM,QAANC,EAAdD,EAAgBG,YAAI,IAAAF,OAAN,EAAdA,EAAsBG,UACxB1F,EAAM0F,SACN,8BACnB7D,EAAS2D,GACTxE,EAAQwE,EACV,CAAC,QACClE,GAAW,EACb,GAkGM4C,SAAU7C,GAAWI,IAAoBP,EAAQc,OACjDa,UAAW,mDACTxB,GAAWI,IAAoBP,EAAQc,OACnC,iCACA,iCACHc,SAEFrB,EACC,qBACEJ,GACFuB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oBAAmBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA6C8C,MAAM,6BAA6B1C,KAAK,OAAOE,QAAQ,YAAWL,SAAA,EAC5HC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,aAAa+C,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAK5C,OAAO,eAAeI,YAAY,OACxFP,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAaI,KAAK,eAAeM,EAAE,uHAC/C,oBAIR,aAAa5B,iBAIf,C","sources":["components/Lib/fetchDrupalContent.ts","components/Content/contentVectorize.tsx"],"sourcesContent":["// lib/fetchDrupalContent.ts\nimport { ISite } from '../../types/sites';\n\nexport interface ContentNode {\n  nid: string;\n  title: string;\n  created: string;\n  status: string;\n  type: string;\n  body: string;\n}\n\nexport const constructEndpointUrl = (baseUrl: string): string | null => {\n  try {\n    let url = baseUrl;\n    if (!url.startsWith('http://') && !url.startsWith('https://')) {\n      url = `https://${url}`;\n    }\n    url = url.replace(/\\/$/, '');\n    return `${url}/api/bulk-export`;\n  } catch (error) {\n    console.error('Error constructing endpoint URL:', error);\n    return null;\n  }\n};\n\nexport const fetchDrupalContent = async (site: ISite): Promise<ContentNode[]> => {\n  if (!site?.site_url) throw new Error('No site URL provided');\n\n  const endpointUrl = constructEndpointUrl(site.site_url);\n  if (!endpointUrl) throw new Error('Invalid site URL');\n\n  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n  if (!apiBaseUrl) {\n    console.error(\"CRITICAL: REACT_APP_API_BASE_URL is not defined.\");\n    throw new Error(\"Application configuration error: API endpoint is missing.\");\n  }\n\n  const firebaseFunctionUrl = `${apiBaseUrl}/drupal7/structure?endpoint=${encodeURIComponent(endpointUrl)}`;\n  const response = await fetch(firebaseFunctionUrl);\n\n  if (!response.ok) {\n    throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n  }\n\n  const result = await response.json();\n  return result.structure || [];\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { fetchDrupalContent, ContentNode } from '../Lib/fetchDrupalContent';\nimport { ICMS, ISite } from '../../types/sites';\n\ninterface VectorizeProps {\n  site: ISite;\n  onComplete: (result: { objectsCreated: number; siteName: string }) => void;\n  onError: (message: string) => void;\n  onClose: () => void;\n}\n\nconst Vectorize: React.FC<VectorizeProps> = ({ site, onComplete, onError, onClose }) => {\n  const [content, setContent] = useState<ContentNode[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [fetchingContent, setFetchingContent] = useState(false);\n  const [contentCount, setContentCount] = useState(0);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch content from Drupal when component mounts\n  useEffect(() => {\n    const loadContent = async () => {\n      try {\n        setFetchingContent(true);\n        setError(null);\n        const nodes = await fetchDrupalContent(site);\n        if (nodes.length === 0) {\n          setError('No content available to vectorize from this site.');\n          return;\n        }\n        setContent(nodes);\n        setContentCount(nodes.length);\n      } catch (err) {\n        console.error('Failed to fetch Drupal content:', err);\n        setError('Could not connect to the site. Please check your connection and try again.');\n        onError('Could not fetch Drupal content');\n      } finally {\n        setFetchingContent(false);\n      }\n    };\n\n    loadContent();\n  }, [site]);\n\n  const cleanBodyText = (text: string) => {\n    if (!text) return '';\n    \n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = text;\n    let cleaned = textArea.value;\n\n    cleaned = cleaned\n      .replace(/<[^>]*>?/gm, '')\n      .replace(/\\\\(r|n|\"|')/g, '')\n      .replace(/\\s+/g, ' ')\n      .trim();\n\n    return cleaned;\n  };\n\n  const preparePayload = (nodes: ContentNode[]) => ({\n    objects: nodes.map((node) => ({\n      class: 'IntelligensiAi',\n      properties: {\n        nid: node.nid,\n        title: node.title,\n        body: cleanBodyText(node.body),\n        created: node.created,\n        status: node.status === \"1\" ? \"published\" : \"unpublished\",\n        type: node.type,\n      },\n    })),\n  });\n\n  const handleVectorize = async () => {\n    try {\n      if (!content.length) {\n        setError('No content available to vectorize');\n        return;\n      }\n  \n      setLoading(true);\n      setProgress(0);\n      setError(null);\n  \n      // Process in batches to avoid overwhelming the server\n      const batchSize = 5;\n      let successfulCount = 0;\n  \n      for (let i = 0; i < content.length; i += batchSize) {\n        const batch = content.slice(i, i + batchSize);\n        \n        for (let j = 0; j < batch.length; j++) {\n          const node = batch[j];\n          try {\n            const payload = preparePayload([node]);\n            \n            const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n            if (!apiBaseUrl) {\n              console.error(\"CRITICAL: REACT_APP_API_BASE_URL is not defined. Ensure it is set in your .env file for the frontend.\");\n              setError('Application configuration error: API endpoint is missing.');\n              setLoading(false);\n              // Optionally, you could throw an error here or break the loop\n              return; // Stop the vectorization process if the base URL isn't set\n            }\n\n            await axios.post(\n              `${apiBaseUrl}/writeWeaviate`,\n              payload,\n              {\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n              }\n            );\n  \n            successfulCount++;\n          } catch (error) {\n            console.error(`Failed to vectorize item ${node.nid}:`, error);\n          } finally {\n            const processedCount = i + j + 1;\n            const newProgress = Math.round((processedCount / content.length) * 100);\n            setProgress(newProgress);\n          }\n        }\n      }\n  \n      onComplete({ \n        objectsCreated: successfulCount,\n        siteName: site.site_name\n      });\n    } catch (error) {\n      console.error('Vectorization error:', error);\n      const errorMessage = error.response?.data?.message || \n                         error.message || \n                         'Failed to vectorize content';\n      setError(errorMessage);\n      onError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If there's an error, show error dialog\n  if (error) {\n    return (\n      <div className=\"bg-[#2D3748] rounded-lg p-6 w-full \">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-bold text-white\">Error</h2>\n          <button \n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        <div className=\"bg-[#1F2937] border border-red-500/50 rounded-lg p-4 mb-6\">\n          <div className=\"flex items-start text-gray-200\">\n            <svg className=\"w-5 h-5 mr-3 text-red-500 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span className=\"text-sm\">{error}</span>\n          </div>\n        </div>\n        <div className=\"flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded transition-colors text-sm font-medium\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-[#2D3748] rounded-lg  max-w-4xl\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-bold text-white\">\n          Vectorize Content from {site.site_name}\n        </h2>\n        <button \n          onClick={onClose}\n          className=\"text-gray-400 hover:text-white\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between mb-1\">\n          <span className=\"text-sm font-medium text-teal-400\">Progress</span>\n          <span className=\"text-sm text-gray-400\">{progress}%</span>\n        </div>\n        <div className=\"w-full bg-gray-700 rounded-full h-2.5\">\n          <div\n            className=\"bg-teal-500 h-2.5 rounded-full transition-all duration-300\"\n            style={{ width: `${progress}%` }}\n          ></div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6 max-h-96 overflow-y-auto\">\n        {content.slice(0, 6).map((node) => (\n          <div key={node.nid} className=\"bg-[#344054] p-3 rounded border border-gray-600\">\n            <h3 className=\"font-bold text-teal-400 truncate\">{node.title}</h3>\n            <p className=\"text-gray-300 text-sm line-clamp-2\">\n              {cleanBodyText(node.body)}\n            </p>\n            <div className=\"text-xs text-gray-400 mt-1\">\n              {node.type} | {node.nid}\n            </div>\n          </div>\n        ))}\n        {content.length > 6 && (\n          <div className=\"bg-[#344054] p-3 rounded border border-gray-600 flex items-center justify-center\">\n            <span className=\"text-gray-400\">\n              +{content.length - 6} more items\n            </span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-700\">\n        <button\n          onClick={onClose}\n          disabled={loading}\n          className=\"px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          onClick={handleVectorize}\n          disabled={loading || fetchingContent || !content.length}\n          className={`px-4 py-2 rounded text-white transition-colors ${\n            loading || fetchingContent || !content.length\n              ? 'bg-gray-600 cursor-not-allowed' \n              : 'bg-teal-600 hover:bg-teal-500'\n          }`}\n        >\n          {fetchingContent ? (\n            'Loading Content...'\n          ) : loading ? (\n            <span className=\"flex items-center\">\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Vectorizing...\n            </span>\n          ) : (\n            `Vectorize ${contentCount} Items`\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Vectorize;"],"names":["fetchDrupalContent","async","site","site_url","Error","endpointUrl","baseUrl","url","startsWith","replace","error","console","constructEndpointUrl","apiBaseUrl","process","firebaseFunctionUrl","encodeURIComponent","response","fetch","ok","status","statusText","json","structure","_ref","onComplete","onError","onClose","content","setContent","useState","loading","setLoading","progress","setProgress","fetchingContent","setFetchingContent","contentCount","setContentCount","setError","useEffect","nodes","length","err","loadContent","cleanBodyText","text","textArea","document","createElement","innerHTML","cleaned","value","trim","_jsxs","className","children","_jsx","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","site_name","style","width","slice","map","node","title","body","type","nid","disabled","batchSize","successfulCount","i","batch","j","payload","objects","class","properties","created","axios","post","headers","processedCount","newProgress","Math","round","objectsCreated","siteName","_error$response","_error$response$data","errorMessage","data","message","xmlns","cx","cy","r"],"sourceRoot":""}